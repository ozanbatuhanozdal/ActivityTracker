[{"C:\\Users\\ozanb\\source\\repos\\ActivityTracker\\client\\src\\index.tsx":"1","C:\\Users\\ozanb\\source\\repos\\ActivityTracker\\client\\src\\reportWebVitals.ts":"2","C:\\Users\\ozanb\\source\\repos\\ActivityTracker\\client\\src\\app\\layout\\App.tsx":"3","C:\\Users\\ozanb\\source\\repos\\ActivityTracker\\client\\src\\features\\nav\\Navbar.tsx":"4","C:\\Users\\ozanb\\source\\repos\\ActivityTracker\\client\\src\\features\\activities\\dashboard\\ActivityDashboard.tsx":"5","C:\\Users\\ozanb\\source\\repos\\ActivityTracker\\client\\src\\features\\activities\\dashboard\\ActivityList.tsx":"6","C:\\Users\\ozanb\\source\\repos\\ActivityTracker\\client\\src\\features\\activities\\details\\ActivityDetails.tsx":"7","C:\\Users\\ozanb\\source\\repos\\ActivityTracker\\client\\src\\features\\activities\\form\\ActivityForm.tsx":"8","C:\\Users\\ozanb\\source\\repos\\ActivityTracker\\client\\src\\app\\api\\agent.ts":"9","C:\\Users\\ozanb\\source\\repos\\ActivityTracker\\client\\src\\app\\layout\\LoadingComponent.tsx":"10"},{"size":581,"mtime":1613215319212,"results":"11","hashOfConfig":"12"},{"size":440,"mtime":1612699212282,"results":"13","hashOfConfig":"12"},{"size":3081,"mtime":1614122147384,"results":"14","hashOfConfig":"12"},{"size":634,"mtime":1614122368613,"results":"15","hashOfConfig":"12"},{"size":1912,"mtime":1614122202265,"results":"16","hashOfConfig":"12"},{"size":1918,"mtime":1614122288824,"results":"17","hashOfConfig":"12"},{"size":1357,"mtime":1613395274090,"results":"18","hashOfConfig":"12"},{"size":2882,"mtime":1614121231068,"results":"19","hashOfConfig":"12"},{"size":1136,"mtime":1614120349486,"results":"20","hashOfConfig":"12"},{"size":331,"mtime":1614120837898,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1gfymab",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"24"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"24"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\ozanb\\source\\repos\\ActivityTracker\\client\\src\\index.tsx",[],["45","46"],"C:\\Users\\ozanb\\source\\repos\\ActivityTracker\\client\\src\\reportWebVitals.ts",[],"C:\\Users\\ozanb\\source\\repos\\ActivityTracker\\client\\src\\app\\layout\\App.tsx",["47"],"C:\\Users\\ozanb\\source\\repos\\ActivityTracker\\client\\src\\features\\nav\\Navbar.tsx",[],"C:\\Users\\ozanb\\source\\repos\\ActivityTracker\\client\\src\\features\\activities\\dashboard\\ActivityDashboard.tsx",["48","49"],"C:\\Users\\ozanb\\source\\repos\\ActivityTracker\\client\\src\\features\\activities\\dashboard\\ActivityList.tsx",[],"C:\\Users\\ozanb\\source\\repos\\ActivityTracker\\client\\src\\features\\activities\\details\\ActivityDetails.tsx",[],"C:\\Users\\ozanb\\source\\repos\\ActivityTracker\\client\\src\\features\\activities\\form\\ActivityForm.tsx",["50"],"import React, { useState,FormEvent } from \"react\";\r\nimport { Button, Form, Segment } from \"semantic-ui-react\";\r\nimport { IActivity } from \"../../../app/models/activity\";\r\nimport {v4 as uuid} from 'uuid';\r\n\r\ninterface IProps {\r\n  setEditMode: (editMode: boolean) => void;\r\n  activity: IActivity | null;\r\n  createActivity: (activity: IActivity) => void;\r\n  editActivity: (activity: IActivity) => void;\r\n  submitting: boolean;\r\n}\r\n\r\nexport const ActivityForm: React.FC<IProps> = ({\r\n  setEditMode,\r\n  activity: initialFormState,\r\n  createActivity,\r\n  editActivity,\r\n  submitting\r\n}) => {\r\n  const initializeForm = () => {\r\n    if (initialFormState) {\r\n      return initialFormState;\r\n    } else {\r\n      return {\r\n        id: \"\",\r\n        title: \"\",\r\n        category: \"\",\r\n        description: \"\",\r\n        date: \"\",\r\n        city: \"\",\r\n        venue: \"\",\r\n      };\r\n    }\r\n  };\r\n\r\n  const [activity, setActivity] = useState<IActivity>(initializeForm);\r\n\r\n  const handleSubmit = () => {\r\n    if(activity.id.length == 0)\r\n    {\r\n      let newActivity ={\r\n         ...activity,\r\n         id: uuid()\r\n      }\r\n      createActivity(newActivity);\r\n    } else{\r\n      editActivity(activity);\r\n    }\r\n  }\r\n\r\n  const handleInputChange = (event: FormEvent<HTMLInputElement | HTMLTextAreaElement>) => {\r\n    const { name, value } = event.currentTarget;\r\n    setActivity({ ...activity, [name]: value });\r\n  };\r\n\r\n  return (\r\n    <Segment clearing>\r\n      <Form onSubmit={handleSubmit}>\r\n        <Form.Input\r\n          onChange={handleInputChange}\r\n          name=\"title\"\r\n          placeholder=\"Title\"\r\n          value={activity.title}\r\n        />\r\n        <Form.TextArea\r\n          onChange={handleInputChange}\r\n          rows={2}\r\n          name=\"description\"\r\n          placeholder=\"Description\"\r\n          value={activity.description}\r\n        />\r\n        <Form.Input\r\n          onChange={handleInputChange}\r\n          name=\"category\"\r\n          placeholder=\"Category\"\r\n          value={activity.category}\r\n        />\r\n        <Form.Input\r\n          onChange={handleInputChange}\r\n          type=\"date\"\r\n          name=\"date\"\r\n          placeholder=\"Date\"\r\n          value={activity.date}\r\n        />\r\n        <Form.Input\r\n          onChange={handleInputChange}\r\n          name=\"city\"\r\n          placeholder=\"City\"\r\n          value={activity.city}\r\n        />\r\n        <Form.Input\r\n          onChange={handleInputChange}\r\n          name=\"venue\"\r\n          placeholder=\"Venue\"\r\n          value={activity.venue}\r\n        />\r\n        <Button \r\n        loading={submitting}\r\n        floated=\"right\" \r\n        positive type=\"submit\"         \r\n        content=\"Submit\"\r\n        />\r\n        <Button\r\n          onClick={() => setEditMode(false)}\r\n          floated=\"right\"\r\n          negative\r\n          type=\"button\"\r\n          content=\"Cancel\"\r\n        />\r\n      </Form>\r\n    </Segment>\r\n  );\r\n};\r\n","C:\\Users\\ozanb\\source\\repos\\ActivityTracker\\client\\src\\app\\api\\agent.ts",["51"],"import axios, { AxiosResponse } from 'axios';\r\nimport { IActivity } from '../models/activity';\r\n\r\naxios.defaults.baseURL = 'https://localhost:5001/api';\r\n\r\nconst responseBody = (response: AxiosResponse) => response.data;\r\n\r\nconst sleep = (ms:number) => (response:AxiosResponse) =>\r\n        new Promise<AxiosResponse>(resolve => setTimeout(() => resolve(response), ms));\r\n\r\nconst request = {\r\n    get:(url:string) =>  axios.get(url).then(sleep(1000)).then(responseBody),\r\n    post:(url:string,body:{}) => axios.post(url,body).then(sleep(1000)).then(responseBody),\r\n    put:(url:string,body:{}) => axios.put(url,body).then(sleep(1000)).then(responseBody),\r\n    del:(url:string) => axios.delete(url).then(sleep(1000)).then(responseBody)\r\n}\r\n\r\nconst Activities ={\r\n    list:() => request.get('/activities'),\r\n    details:(id:string) => request.get(`/activities/${id}`),\r\n    create: (activity: IActivity) => request.post('/activities', activity),\r\n    update: (activity: IActivity) => request.put(`/activities/${activity.id}`,activity),\r\n    delete:(id:string) => request.del(`/activities/${id}`)\r\n}\r\n\r\n\r\nexport default {\r\n    Activities\r\n}","C:\\Users\\ozanb\\source\\repos\\ActivityTracker\\client\\src\\app\\layout\\LoadingComponent.tsx",[],{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","severity":1,"message":"57","line":2,"column":8,"nodeType":"58","messageId":"59","endLine":2,"endColumn":13},{"ruleId":"60","severity":1,"message":"61","line":55,"column":31,"nodeType":"62","messageId":"63","endLine":55,"endColumn":33},{"ruleId":"60","severity":1,"message":"61","line":55,"column":54,"nodeType":"62","messageId":"63","endLine":55,"endColumn":56},{"ruleId":"64","severity":1,"message":"65","line":40,"column":27,"nodeType":"66","messageId":"67","endLine":40,"endColumn":29},{"ruleId":"68","severity":1,"message":"69","line":27,"column":1,"nodeType":"70","endLine":29,"endColumn":2},"no-native-reassign",["71"],"no-negated-in-lhs",["72"],"@typescript-eslint/no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","no-mixed-operators","Unexpected mix of '&&' and '||'.","LogicalExpression","unexpectedMixedOperator","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation"]