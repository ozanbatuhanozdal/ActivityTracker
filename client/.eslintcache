[{"C:\\Users\\ozanb\\source\\repos\\ActivityTracker\\client\\src\\index.tsx":"1","C:\\Users\\ozanb\\source\\repos\\ActivityTracker\\client\\src\\reportWebVitals.ts":"2","C:\\Users\\ozanb\\source\\repos\\ActivityTracker\\client\\src\\app\\layout\\App.tsx":"3","C:\\Users\\ozanb\\source\\repos\\ActivityTracker\\client\\src\\features\\nav\\Navbar.tsx":"4","C:\\Users\\ozanb\\source\\repos\\ActivityTracker\\client\\src\\features\\activities\\dashboard\\ActivityDashboard.tsx":"5","C:\\Users\\ozanb\\source\\repos\\ActivityTracker\\client\\src\\features\\activities\\dashboard\\ActivityList.tsx":"6","C:\\Users\\ozanb\\source\\repos\\ActivityTracker\\client\\src\\features\\activities\\details\\ActivityDetails.tsx":"7","C:\\Users\\ozanb\\source\\repos\\ActivityTracker\\client\\src\\features\\activities\\form\\ActivityForm.tsx":"8"},{"size":581,"mtime":1613215319212,"results":"9","hashOfConfig":"10"},{"size":440,"mtime":1612699212282,"results":"11","hashOfConfig":"10"},{"size":2161,"mtime":1613406707691,"results":"12","hashOfConfig":"10"},{"size":612,"mtime":1613393647738,"results":"13","hashOfConfig":"10"},{"size":1740,"mtime":1613406651364,"results":"14","hashOfConfig":"10"},{"size":1739,"mtime":1613406684549,"results":"15","hashOfConfig":"10"},{"size":1357,"mtime":1613395274090,"results":"16","hashOfConfig":"10"},{"size":2813,"mtime":1613405586935,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1gfymab",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"20"},"C:\\Users\\ozanb\\source\\repos\\ActivityTracker\\client\\src\\index.tsx",[],["36","37"],"C:\\Users\\ozanb\\source\\repos\\ActivityTracker\\client\\src\\reportWebVitals.ts",[],"C:\\Users\\ozanb\\source\\repos\\ActivityTracker\\client\\src\\app\\layout\\App.tsx",[],"C:\\Users\\ozanb\\source\\repos\\ActivityTracker\\client\\src\\features\\nav\\Navbar.tsx",[],"C:\\Users\\ozanb\\source\\repos\\ActivityTracker\\client\\src\\features\\activities\\dashboard\\ActivityDashboard.tsx",["38","39"],"C:\\Users\\ozanb\\source\\repos\\ActivityTracker\\client\\src\\features\\activities\\dashboard\\ActivityList.tsx",[],"C:\\Users\\ozanb\\source\\repos\\ActivityTracker\\client\\src\\features\\activities\\details\\ActivityDetails.tsx",[],"C:\\Users\\ozanb\\source\\repos\\ActivityTracker\\client\\src\\features\\activities\\form\\ActivityForm.tsx",["40"],"import React, { useState,FormEvent } from \"react\";\r\nimport { Button, Form, Segment } from \"semantic-ui-react\";\r\nimport { IActivity } from \"../../../app/models/activity\";\r\nimport {v4 as uuid} from 'uuid';\r\n\r\ninterface IProps {\r\n  setEditMode: (editMode: boolean) => void;\r\n  activity: IActivity | null;\r\n  createActivity: (activity: IActivity) => void;\r\n  editActivity: (activity: IActivity) => void;\r\n}\r\n\r\nexport const ActivityForm: React.FC<IProps> = ({\r\n  setEditMode,\r\n  activity: initialFormState,\r\n  createActivity,\r\n  editActivity\r\n}) => {\r\n  const initializeForm = () => {\r\n    if (initialFormState) {\r\n      return initialFormState;\r\n    } else {\r\n      return {\r\n        id: \"\",\r\n        title: \"\",\r\n        category: \"\",\r\n        description: \"\",\r\n        date: \"\",\r\n        city: \"\",\r\n        venue: \"\",\r\n      };\r\n    }\r\n  };\r\n\r\n  const [activity, setActivity] = useState<IActivity>(initializeForm);\r\n\r\n  const handleSubmit = () => {\r\n    if(activity.id.length == 0)\r\n    {\r\n      let newActivity ={\r\n         ...activity,\r\n         id: uuid()\r\n      }\r\n      createActivity(newActivity);\r\n    } else{\r\n      editActivity(activity);\r\n    }\r\n  }\r\n\r\n  const handleInputChange = (event: FormEvent<HTMLInputElement | HTMLTextAreaElement>) => {\r\n    const { name, value } = event.currentTarget;\r\n    setActivity({ ...activity, [name]: value });\r\n  };\r\n\r\n  return (\r\n    <Segment clearing>\r\n      <Form onSubmit={handleSubmit}>\r\n        <Form.Input\r\n          onChange={handleInputChange}\r\n          name=\"title\"\r\n          placeholder=\"Title\"\r\n          value={activity.title}\r\n        />\r\n        <Form.TextArea\r\n          onChange={handleInputChange}\r\n          rows={2}\r\n          name=\"description\"\r\n          placeholder=\"Description\"\r\n          value={activity.description}\r\n        />\r\n        <Form.Input\r\n          onChange={handleInputChange}\r\n          name=\"category\"\r\n          placeholder=\"Category\"\r\n          value={activity.category}\r\n        />\r\n        <Form.Input\r\n          onChange={handleInputChange}\r\n          type=\"date\"\r\n          name=\"date\"\r\n          placeholder=\"Date\"\r\n          value={activity.date}\r\n        />\r\n        <Form.Input\r\n          onChange={handleInputChange}\r\n          name=\"city\"\r\n          placeholder=\"City\"\r\n          value={activity.city}\r\n        />\r\n        <Form.Input\r\n          onChange={handleInputChange}\r\n          name=\"venue\"\r\n          placeholder=\"Venue\"\r\n          value={activity.venue}\r\n        />\r\n        <Button \r\n        floated=\"right\" \r\n        positive type=\"submit\"         \r\n        content=\"Submit\"\r\n        />\r\n        <Button\r\n          onClick={() => setEditMode(false)}\r\n          floated=\"right\"\r\n          negative\r\n          type=\"button\"\r\n          content=\"Cancel\"\r\n        />\r\n      </Form>\r\n    </Segment>\r\n  );\r\n};\r\n",{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","severity":1,"message":"46","line":49,"column":31,"nodeType":"47","messageId":"48","endLine":49,"endColumn":33},{"ruleId":"45","severity":1,"message":"46","line":49,"column":54,"nodeType":"47","messageId":"48","endLine":49,"endColumn":56},{"ruleId":"49","severity":1,"message":"50","line":38,"column":27,"nodeType":"51","messageId":"52","endLine":38,"endColumn":29},"no-native-reassign",["53"],"no-negated-in-lhs",["54"],"no-mixed-operators","Unexpected mix of '&&' and '||'.","LogicalExpression","unexpectedMixedOperator","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]